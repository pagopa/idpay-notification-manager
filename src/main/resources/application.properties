spring.data.mongodb.database=${MONGODB_DBNAME}
spring.data.mongodb.uri=${MONGODB_URI}
spring.application.name=idpay-notification-manager
spring.config.activate.on-profile=default
spring.cloud.stream.function.definition=notificationQueue
spring.cloud.stream.bindings.notificationQueue-in-0.destination=${KAFKA_TOPIC_OUTCOME}
spring.cloud.stream.bindings.notificationQueue-in-0.group=${KAFKA_OUTCOME_GROUP_IN:}
spring.cloud.stream.bindings.notificationQueue-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.notificationQueue-in-0.binder=kafka-outcome
spring.cloud.stream.binders.kafka-outcome.type=kafka
spring.cloud.stream.binders.kafka-outcome.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_OUTCOME_SASL_JAAS_CONFIG}
spring.cloud.stream.binders.kafka-outcome-out.type=kafka
spring.cloud.stream.binders.kafka-outcome-out.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_OUTCOME_OUT_SASL_JAAS_CONFIG}
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.brokers=${KAFKA_BINDER_BROKER_ENDPOINT_LIST}
spring.cloud.stream.kafka.binder.configuration.heartbeat.interval.ms=30000
spring.cloud.stream.kafka.binder.configuration.session.timeout.ms=60000
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=${KAFKA_NOTIFICATION_SASL_MECHANISM}
spring.cloud.stream.kafka.binder.configuration.security.protocol=${KAFKA_NOTIFICATION_SECURITY_PROTOCOL}
spring.cloud.stream.kafka.binder.consumerProperties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.socket.connection.setup.timeout.max.ms=200000
spring.cloud.stream.kafka.binder.consumerProperties.socket.connection.setup.timeout.ms=100000
spring.cloud.stream.kafka.binder.consumerProperties.connections.max.idle.ms=300000